* {
  box-sizing: border-box;

}

html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  background: #222;
}

@mixin circle($size) {
  content: "";
  position: absolute;
  border-radius: 50%;
  width: $size;
  height: $size;
  left: calc(50% - #{$size/2});
  top: calc(50% - #{$size/2});
}

$wheel: 30vmin;


.container {
  position: relative;
  width: 100vmin;
  height: 100vmin;
  padding: 5%;
  top: 50%;
  transform: translate(-50%, -50%);
  left: 50%;
  display: grid;
  grid-template-rows: repeat(4, 1fr);
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 20px;

  section {
    width: 100%;
    height: 100%;
    position: relative;

    &:nth-of-type(1) {
      grid-column: span 2;
      grid-row: span 2;
      $x: 1;
      $i: 7.7%;
      $animation-time: 0.3s;
      @while $x < 13 {
        @each $color in #9ED110, #50B517, #179067, #476EAF, #9f49ac, #CC42A2, #FF3BA7, #FF5800, #FF8100, #FEAC00, #FFCC00, #EDE604 {
          .part-#{$x} {
            width: 100% - $i;
            height: 100% - $i;
            position: relative;
            top: 50%;
            transform: translate(-50%, -50%);
            left: 50%;
            border-radius: 50%;
            background-color: $color;
            animation: flicker $animation-time ease alternate;
            animation-delay: ($x * 2 * $animation-time);

            @keyframes flicker {
              0% {
                opacity: 1;
              }
              100% {
                opacity: 0;
              }
            }
          }

          $x: $x + 1;
          $i: ($i * 100%) / (100% - $i);
        }
      }
    }

    &:nth-of-type(2) {
      grid-column: span 2;
      grid-row: span 2;
      display: inline-block;
      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
      animation: spin 1.2s linear infinite;

      .color, .color:nth-child(n+7):after {
        @include circle($wheel);
        clip: rect(0, $wheel, $wheel, #{$wheel/2});
      }

      .color:after, .color:nth-child(n+7){
        @include circle($wheel);
        clip: rect(0, #{$wheel/2}, $wheel, 0);
      }

      $colors: (#9ED110, #50B517, #179067, #476EAF, #9f49ac, #CC42A2, #FF3BA7, #FF5800, #FF8100, #FEAC00, #FFCC00, #EDE604);
      @for $i from 0 to length($colors) {
        .color:nth-child(#{1+$i}):after {
          background-color: nth($colors, $i+1);
          @if $i < 6 {
            transform: rotate(#{30*(1+$i)}deg);
            z-index: #{length($colors)-$i};
          } @else {
            transform: rotate(#{-30+(30*(1+$i))}deg);
          }
        }
      }
    }

    &:nth-of-type(3) {
      grid-column: span 4;
      grid-row: span 2;
      overflow-y: hidden;

      div {
        position: relative;
        width: 100%;
        height: 100%;
        overflow: hidden;
        background: transparent;
        animation: rotate 3s ease-in-out;
        @keyframes rotate {
          0% {
            transform: translate(-150%, 50%) rotate(-90deg);
          }
          100% {
            transform: translate(0, 0) rotate(0deg);
          }
        }

        &:after {
          position: absolute;
          box-shadow: 0 0 0 1vmin #FF3BA7,
          0 0 0 2vmin #CC42A2,
          0 0 0 3vmin #9f49ac,
          0 0 0 4vmin #476EAF,
          0 0 0 5vmin #179067,
          0 0 0 6vmin #50B517,
          0 0 0 7vmin #9ED110,
          0 0 0 8vmin #EDE604,
          0 0 0 9vmin #FFCC00,
          0 0 0 10vmin #FEAC00,
          0 0 0 11vmin #FF8100,
          0 0 0 12vmin #FF5800;
          width: 65%;
          height: 150%;
          top: 110%;
          transform: translate(-50%, -50%);
          left: 50%;
          content: '';
          border-radius: 50%;
        }
      }
    }
  }
}

